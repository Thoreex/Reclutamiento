version: "3.1"
services:
    flask:
        build: .
        image: reclutamiento_flask:0.0.1
        command: flask run
        env_file:
            - .env
        ports:
            - "${FLASK_RUN_PORT:-5000}:5000"
        volumes:
            - .:/app
        networks:
            - network
        depends_on:
            postgres:
                condition: service_healthy
    postgres:
        image: postgres:14.1-alpine
        ports:
            - "${DB_PORT:-5432}:5432"
        environment:
            POSTGRES_DB: "${DB_DATABASE}"
            POSTGRES_USER: "${DB_USERNAME}"
            POSTGRES_PASSWORD: "${DB_PASSWORD}"
        volumes:
            - data:/var/lib/postgresql/data
        networks:
            - network
        healthcheck:
          test: ["CMD", "pg_isready"]
          retries: 5
          timeout: 5s
    adminer:
        image: adminer:4.8.1
        ports:
            - "${DBADMIN_PORT:-8080}:8080"
        environment:
            ADMINER_DEFAULT_SERVER: "${DB_HOST}"
        networks:
            - network
    flyway:
        image: flyway/flyway:8.0.5
        command: -url=jdbc:postgresql://postgres:${DB_PORT}/${DB_DATABASE} -user=${DB_USERNAME} -password=${DB_PASSWORD} -connectRetries=60 migrate
        volumes:
            - ./scripts:/flyway/sql
        networks:
            - network
        depends_on:
            - postgres
networks:
    network:
        driver: bridge
volumes:
    data:
        driver: local
